#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE print_test
#include <boost/test/unit_test.hpp>
#include <string>
#include <iostream>
#include <booster/text_template/include.hpp>
using boost::system::error_condition;
using booster::text_template::parent_node;
using booster::text_template::parse;
using booster::text_template::parser;
using booster::text_template::text_template;
using std::string;

bool test_double(const std::string& in) {
    std::string::const_iterator begin = in.begin();
    parser<std::string::const_iterator> pp;
    parent_node parent;
    return pp.parse_double_value(begin, in.end(), parent);
}

BOOST_AUTO_TEST_CASE(text) {
    {
        text_template tpl;
        string in("<b>Hello</b>");
        BOOST_CHECK_NO_THROW(tpl = parse(in.begin(), in.end()));
        BOOST_CHECK(in == tpl());
    }
    
    {
        text_template tpl;
        string in("<b>Hello @print</b>");
        BOOST_CHECK_NO_THROW(tpl = parse(in.begin(), in.end()));
        BOOST_CHECK(in == tpl());
    }
}

BOOST_AUTO_TEST_CASE(parse_double_value) {
    BOOST_CHECK_EQUAL(false, test_double(""));
    BOOST_CHECK_EQUAL(false, test_double("-"));
    BOOST_CHECK_EQUAL(false, test_double("-+"));
    BOOST_CHECK_EQUAL(false, test_double("-+0"));
    BOOST_CHECK_EQUAL(false, test_double("-+01"));
    BOOST_CHECK_EQUAL(false, test_double("-+01."));
    BOOST_CHECK_EQUAL(false, test_double("-+0."));
    BOOST_CHECK_EQUAL(false, test_double("-+0.1"));
    BOOST_CHECK_EQUAL(false, test_double("-+1"));
    BOOST_CHECK_EQUAL(false, test_double("-+10"));
    BOOST_CHECK_EQUAL(false, test_double("-+10."));
    BOOST_CHECK_EQUAL(false, test_double("-+1."));
    BOOST_CHECK_EQUAL(false, test_double("-+1.0"));
    BOOST_CHECK_EQUAL(false, test_double("-+."));
    BOOST_CHECK_EQUAL(false, test_double("-+.0"));
    BOOST_CHECK_EQUAL(false, test_double("-+.01"));
    BOOST_CHECK_EQUAL(false, test_double("-+.1"));
    BOOST_CHECK_EQUAL(false, test_double("-+.10"));
    BOOST_CHECK_EQUAL(false, test_double("-0"));
    BOOST_CHECK_EQUAL(false, test_double("-0+"));
    BOOST_CHECK_EQUAL(false, test_double("-0+1"));
    BOOST_CHECK_EQUAL(false, test_double("-0+1."));
    BOOST_CHECK_EQUAL(false, test_double("-0+."));
    BOOST_CHECK_EQUAL(false, test_double("-0+.1"));
    BOOST_CHECK_EQUAL(false, test_double("-01"));
    BOOST_CHECK_EQUAL(false, test_double("-01+"));
    BOOST_CHECK_EQUAL(false, test_double("-01+."));
    BOOST_CHECK_EQUAL(false, test_double("-01."));
    BOOST_CHECK_EQUAL(false, test_double("-01.+"));
    BOOST_CHECK_EQUAL(false, test_double("-0."));
    BOOST_CHECK_EQUAL(false, test_double("-0.+"));
    BOOST_CHECK_EQUAL(false, test_double("-0.+1"));
    BOOST_CHECK_EQUAL(true, test_double("-0.1"));
    BOOST_CHECK_EQUAL(true, test_double("-0.1+"));
    BOOST_CHECK_EQUAL(false, test_double("-1"));
    BOOST_CHECK_EQUAL(false, test_double("-1+"));
    BOOST_CHECK_EQUAL(false, test_double("-1+0"));
    BOOST_CHECK_EQUAL(false, test_double("-1+0."));
    BOOST_CHECK_EQUAL(false, test_double("-1+."));
    BOOST_CHECK_EQUAL(false, test_double("-1+.0"));
    BOOST_CHECK_EQUAL(false, test_double("-10"));
    BOOST_CHECK_EQUAL(false, test_double("-10+"));
    BOOST_CHECK_EQUAL(false, test_double("-10+."));
    BOOST_CHECK_EQUAL(false, test_double("-10."));
    BOOST_CHECK_EQUAL(false, test_double("-10.+"));
    BOOST_CHECK_EQUAL(false, test_double("-1."));
    BOOST_CHECK_EQUAL(false, test_double("-1.+"));
    BOOST_CHECK_EQUAL(false, test_double("-1.+0"));
    BOOST_CHECK_EQUAL(true, test_double("-1.0"));
    BOOST_CHECK_EQUAL(true, test_double("-1.0+"));
    BOOST_CHECK_EQUAL(false, test_double("-."));
    BOOST_CHECK_EQUAL(false, test_double("-.+"));
    BOOST_CHECK_EQUAL(false, test_double("-.+0"));
    BOOST_CHECK_EQUAL(false, test_double("-.+01"));
    BOOST_CHECK_EQUAL(false, test_double("-.+1"));
    BOOST_CHECK_EQUAL(false, test_double("-.+10"));
    BOOST_CHECK_EQUAL(false, test_double("-.0"));
    BOOST_CHECK_EQUAL(false, test_double("-.0+"));
    BOOST_CHECK_EQUAL(false, test_double("-.0+1"));
    BOOST_CHECK_EQUAL(false, test_double("-.01"));
    BOOST_CHECK_EQUAL(false, test_double("-.01+"));
    BOOST_CHECK_EQUAL(false, test_double("-.1"));
    BOOST_CHECK_EQUAL(false, test_double("-.1+"));
    BOOST_CHECK_EQUAL(false, test_double("-.1+0"));
    BOOST_CHECK_EQUAL(false, test_double("-.10"));
    BOOST_CHECK_EQUAL(false, test_double("-.10+"));
    BOOST_CHECK_EQUAL(false, test_double("+"));
    BOOST_CHECK_EQUAL(false, test_double("+-"));
    BOOST_CHECK_EQUAL(false, test_double("+-0"));
    BOOST_CHECK_EQUAL(false, test_double("+-01"));
    BOOST_CHECK_EQUAL(false, test_double("+-01."));
    BOOST_CHECK_EQUAL(false, test_double("+-0."));
    BOOST_CHECK_EQUAL(false, test_double("+-0.1"));
    BOOST_CHECK_EQUAL(false, test_double("+-1"));
    BOOST_CHECK_EQUAL(false, test_double("+-10"));
    BOOST_CHECK_EQUAL(false, test_double("+-10."));
    BOOST_CHECK_EQUAL(false, test_double("+-1."));
    BOOST_CHECK_EQUAL(false, test_double("+-1.0"));
    BOOST_CHECK_EQUAL(false, test_double("+-."));
    BOOST_CHECK_EQUAL(false, test_double("+-.0"));
    BOOST_CHECK_EQUAL(false, test_double("+-.01"));
    BOOST_CHECK_EQUAL(false, test_double("+-.1"));
    BOOST_CHECK_EQUAL(false, test_double("+-.10"));
    BOOST_CHECK_EQUAL(false, test_double("+0"));
    BOOST_CHECK_EQUAL(false, test_double("+0-"));
    BOOST_CHECK_EQUAL(false, test_double("+0-1"));
    BOOST_CHECK_EQUAL(false, test_double("+0-1."));
    BOOST_CHECK_EQUAL(false, test_double("+0-."));
    BOOST_CHECK_EQUAL(false, test_double("+0-.1"));
    BOOST_CHECK_EQUAL(false, test_double("+01"));
    BOOST_CHECK_EQUAL(false, test_double("+01-"));
    BOOST_CHECK_EQUAL(false, test_double("+01-."));
    BOOST_CHECK_EQUAL(false, test_double("+01."));
    BOOST_CHECK_EQUAL(false, test_double("+01.-"));
    BOOST_CHECK_EQUAL(false, test_double("+0."));
    BOOST_CHECK_EQUAL(false, test_double("+0.-"));
    BOOST_CHECK_EQUAL(false, test_double("+0.-1"));
    BOOST_CHECK_EQUAL(true, test_double("+0.1"));
    BOOST_CHECK_EQUAL(true, test_double("+0.1-"));
    BOOST_CHECK_EQUAL(false, test_double("+1"));
    BOOST_CHECK_EQUAL(false, test_double("+1-"));
    BOOST_CHECK_EQUAL(false, test_double("+1-0"));
    BOOST_CHECK_EQUAL(false, test_double("+1-0."));
    BOOST_CHECK_EQUAL(false, test_double("+1-."));
    BOOST_CHECK_EQUAL(false, test_double("+1-.0"));
    BOOST_CHECK_EQUAL(false, test_double("+10"));
    BOOST_CHECK_EQUAL(false, test_double("+10-"));
    BOOST_CHECK_EQUAL(false, test_double("+10-."));
    BOOST_CHECK_EQUAL(false, test_double("+10."));
    BOOST_CHECK_EQUAL(false, test_double("+10.-"));
    BOOST_CHECK_EQUAL(false, test_double("+1."));
    BOOST_CHECK_EQUAL(false, test_double("+1.-"));
    BOOST_CHECK_EQUAL(false, test_double("+1.-0"));
    BOOST_CHECK_EQUAL(true, test_double("+1.0"));
    BOOST_CHECK_EQUAL(true, test_double("+1.0-"));
    BOOST_CHECK_EQUAL(false, test_double("+."));
    BOOST_CHECK_EQUAL(false, test_double("+.-"));
    BOOST_CHECK_EQUAL(false, test_double("+.-0"));
    BOOST_CHECK_EQUAL(false, test_double("+.-01"));
    BOOST_CHECK_EQUAL(false, test_double("+.-1"));
    BOOST_CHECK_EQUAL(false, test_double("+.-10"));
    BOOST_CHECK_EQUAL(false, test_double("+.0"));
    BOOST_CHECK_EQUAL(false, test_double("+.0-"));
    BOOST_CHECK_EQUAL(false, test_double("+.0-1"));
    BOOST_CHECK_EQUAL(false, test_double("+.01"));
    BOOST_CHECK_EQUAL(false, test_double("+.01-"));
    BOOST_CHECK_EQUAL(false, test_double("+.1"));
    BOOST_CHECK_EQUAL(false, test_double("+.1-"));
    BOOST_CHECK_EQUAL(false, test_double("+.1-0"));
    BOOST_CHECK_EQUAL(false, test_double("+.10"));
    BOOST_CHECK_EQUAL(false, test_double("+.10-"));
    BOOST_CHECK_EQUAL(false, test_double("0"));
    BOOST_CHECK_EQUAL(false, test_double("0-"));
    BOOST_CHECK_EQUAL(false, test_double("0-+"));
    BOOST_CHECK_EQUAL(false, test_double("0-+1"));
    BOOST_CHECK_EQUAL(false, test_double("0-+1."));
    BOOST_CHECK_EQUAL(false, test_double("0-+."));
    BOOST_CHECK_EQUAL(false, test_double("0-+.1"));
    BOOST_CHECK_EQUAL(false, test_double("0-1"));
    BOOST_CHECK_EQUAL(false, test_double("0-1+"));
    BOOST_CHECK_EQUAL(false, test_double("0-1+."));
    BOOST_CHECK_EQUAL(false, test_double("0-1."));
    BOOST_CHECK_EQUAL(false, test_double("0-1.+"));
    BOOST_CHECK_EQUAL(false, test_double("0-."));
    BOOST_CHECK_EQUAL(false, test_double("0-.+"));
    BOOST_CHECK_EQUAL(false, test_double("0-.+1"));
    BOOST_CHECK_EQUAL(false, test_double("0-.1"));
    BOOST_CHECK_EQUAL(false, test_double("0-.1+"));
    BOOST_CHECK_EQUAL(false, test_double("0+"));
    BOOST_CHECK_EQUAL(false, test_double("0+-"));
    BOOST_CHECK_EQUAL(false, test_double("0+-1"));
    BOOST_CHECK_EQUAL(false, test_double("0+-1."));
    BOOST_CHECK_EQUAL(false, test_double("0+-."));
    BOOST_CHECK_EQUAL(false, test_double("0+-.1"));
    BOOST_CHECK_EQUAL(false, test_double("0+1"));
    BOOST_CHECK_EQUAL(false, test_double("0+1-"));
    BOOST_CHECK_EQUAL(false, test_double("0+1-."));
    BOOST_CHECK_EQUAL(false, test_double("0+1."));
    BOOST_CHECK_EQUAL(false, test_double("0+1.-"));
    BOOST_CHECK_EQUAL(false, test_double("0+."));
    BOOST_CHECK_EQUAL(false, test_double("0+.-"));
    BOOST_CHECK_EQUAL(false, test_double("0+.-1"));
    BOOST_CHECK_EQUAL(false, test_double("0+.1"));
    BOOST_CHECK_EQUAL(false, test_double("0+.1-"));
    BOOST_CHECK_EQUAL(false, test_double("01"));
    BOOST_CHECK_EQUAL(false, test_double("01-"));
    BOOST_CHECK_EQUAL(false, test_double("01-+"));
    BOOST_CHECK_EQUAL(false, test_double("01-+."));
    BOOST_CHECK_EQUAL(false, test_double("01-."));
    BOOST_CHECK_EQUAL(false, test_double("01-.+"));
    BOOST_CHECK_EQUAL(false, test_double("01+"));
    BOOST_CHECK_EQUAL(false, test_double("01+-"));
    BOOST_CHECK_EQUAL(false, test_double("01+-."));
    BOOST_CHECK_EQUAL(false, test_double("01+."));
    BOOST_CHECK_EQUAL(false, test_double("01+.-"));
    BOOST_CHECK_EQUAL(false, test_double("01."));
    BOOST_CHECK_EQUAL(false, test_double("01.-"));
    BOOST_CHECK_EQUAL(false, test_double("01.-+"));
    BOOST_CHECK_EQUAL(false, test_double("01.+"));
    BOOST_CHECK_EQUAL(false, test_double("01.+-"));
    BOOST_CHECK_EQUAL(false, test_double("0."));
    BOOST_CHECK_EQUAL(false, test_double("0.-"));
    BOOST_CHECK_EQUAL(false, test_double("0.-+"));
    BOOST_CHECK_EQUAL(false, test_double("0.-+1"));
    BOOST_CHECK_EQUAL(false, test_double("0.-1"));
    BOOST_CHECK_EQUAL(false, test_double("0.-1+"));
    BOOST_CHECK_EQUAL(false, test_double("0.+"));
    BOOST_CHECK_EQUAL(false, test_double("0.+-"));
    BOOST_CHECK_EQUAL(false, test_double("0.+-1"));
    BOOST_CHECK_EQUAL(false, test_double("0.+1"));
    BOOST_CHECK_EQUAL(false, test_double("0.+1-"));
    BOOST_CHECK_EQUAL(true, test_double("0.1"));
    BOOST_CHECK_EQUAL(true, test_double("0.1-"));
    BOOST_CHECK_EQUAL(true, test_double("0.1-+"));
    BOOST_CHECK_EQUAL(true, test_double("0.1+"));
    BOOST_CHECK_EQUAL(true, test_double("0.1+-"));
    BOOST_CHECK_EQUAL(false, test_double("1"));
    BOOST_CHECK_EQUAL(false, test_double("1-"));
    BOOST_CHECK_EQUAL(false, test_double("1-+"));
    BOOST_CHECK_EQUAL(false, test_double("1-+0"));
    BOOST_CHECK_EQUAL(false, test_double("1-+0."));
    BOOST_CHECK_EQUAL(false, test_double("1-+."));
    BOOST_CHECK_EQUAL(false, test_double("1-+.0"));
    BOOST_CHECK_EQUAL(false, test_double("1-0"));
    BOOST_CHECK_EQUAL(false, test_double("1-0+"));
    BOOST_CHECK_EQUAL(false, test_double("1-0+."));
    BOOST_CHECK_EQUAL(false, test_double("1-0."));
    BOOST_CHECK_EQUAL(false, test_double("1-0.+"));
    BOOST_CHECK_EQUAL(false, test_double("1-."));
    BOOST_CHECK_EQUAL(false, test_double("1-.+"));
    BOOST_CHECK_EQUAL(false, test_double("1-.+0"));
    BOOST_CHECK_EQUAL(false, test_double("1-.0"));
    BOOST_CHECK_EQUAL(false, test_double("1-.0+"));
    BOOST_CHECK_EQUAL(false, test_double("1+"));
    BOOST_CHECK_EQUAL(false, test_double("1+-"));
    BOOST_CHECK_EQUAL(false, test_double("1+-0"));
    BOOST_CHECK_EQUAL(false, test_double("1+-0."));
    BOOST_CHECK_EQUAL(false, test_double("1+-."));
    BOOST_CHECK_EQUAL(false, test_double("1+-.0"));
    BOOST_CHECK_EQUAL(false, test_double("1+0"));
    BOOST_CHECK_EQUAL(false, test_double("1+0-"));
    BOOST_CHECK_EQUAL(false, test_double("1+0-."));
    BOOST_CHECK_EQUAL(false, test_double("1+0."));
    BOOST_CHECK_EQUAL(false, test_double("1+0.-"));
    BOOST_CHECK_EQUAL(false, test_double("1+."));
    BOOST_CHECK_EQUAL(false, test_double("1+.-"));
    BOOST_CHECK_EQUAL(false, test_double("1+.-0"));
    BOOST_CHECK_EQUAL(false, test_double("1+.0"));
    BOOST_CHECK_EQUAL(false, test_double("1+.0-"));
    BOOST_CHECK_EQUAL(false, test_double("10"));
    BOOST_CHECK_EQUAL(false, test_double("10-"));
    BOOST_CHECK_EQUAL(false, test_double("10-+"));
    BOOST_CHECK_EQUAL(false, test_double("10-+."));
    BOOST_CHECK_EQUAL(false, test_double("10-."));
    BOOST_CHECK_EQUAL(false, test_double("10-.+"));
    BOOST_CHECK_EQUAL(false, test_double("10+"));
    BOOST_CHECK_EQUAL(false, test_double("10+-"));
    BOOST_CHECK_EQUAL(false, test_double("10+-."));
    BOOST_CHECK_EQUAL(false, test_double("10+."));
    BOOST_CHECK_EQUAL(false, test_double("10+.-"));
    BOOST_CHECK_EQUAL(false, test_double("10."));
    BOOST_CHECK_EQUAL(false, test_double("10.-"));
    BOOST_CHECK_EQUAL(false, test_double("10.-+"));
    BOOST_CHECK_EQUAL(false, test_double("10.+"));
    BOOST_CHECK_EQUAL(false, test_double("10.+-"));
    BOOST_CHECK_EQUAL(false, test_double("1."));
    BOOST_CHECK_EQUAL(false, test_double("1.-"));
    BOOST_CHECK_EQUAL(false, test_double("1.-+"));
    BOOST_CHECK_EQUAL(false, test_double("1.-+0"));
    BOOST_CHECK_EQUAL(false, test_double("1.-0"));
    BOOST_CHECK_EQUAL(false, test_double("1.-0+"));
    BOOST_CHECK_EQUAL(false, test_double("1.+"));
    BOOST_CHECK_EQUAL(false, test_double("1.+-"));
    BOOST_CHECK_EQUAL(false, test_double("1.+-0"));
    BOOST_CHECK_EQUAL(false, test_double("1.+0"));
    BOOST_CHECK_EQUAL(false, test_double("1.+0-"));
    BOOST_CHECK_EQUAL(true, test_double("1.0"));
    BOOST_CHECK_EQUAL(true, test_double("1.0-"));
    BOOST_CHECK_EQUAL(true, test_double("1.0-+"));
    BOOST_CHECK_EQUAL(true, test_double("1.0+"));
    BOOST_CHECK_EQUAL(true, test_double("1.0+-"));
    BOOST_CHECK_EQUAL(false, test_double("."));
    BOOST_CHECK_EQUAL(false, test_double(".-"));
    BOOST_CHECK_EQUAL(false, test_double(".-+"));
    BOOST_CHECK_EQUAL(false, test_double(".-+0"));
    BOOST_CHECK_EQUAL(false, test_double(".-+01"));
    BOOST_CHECK_EQUAL(false, test_double(".-+1"));
    BOOST_CHECK_EQUAL(false, test_double(".-+10"));
    BOOST_CHECK_EQUAL(false, test_double(".-0"));
    BOOST_CHECK_EQUAL(false, test_double(".-0+"));
    BOOST_CHECK_EQUAL(false, test_double(".-0+1"));
    BOOST_CHECK_EQUAL(false, test_double(".-01"));
    BOOST_CHECK_EQUAL(false, test_double(".-01+"));
    BOOST_CHECK_EQUAL(false, test_double(".-1"));
    BOOST_CHECK_EQUAL(false, test_double(".-1+"));
    BOOST_CHECK_EQUAL(false, test_double(".-1+0"));
    BOOST_CHECK_EQUAL(false, test_double(".-10"));
    BOOST_CHECK_EQUAL(false, test_double(".-10+"));
    BOOST_CHECK_EQUAL(false, test_double(".+"));
    BOOST_CHECK_EQUAL(false, test_double(".+-"));
    BOOST_CHECK_EQUAL(false, test_double(".+-0"));
    BOOST_CHECK_EQUAL(false, test_double(".+-01"));
    BOOST_CHECK_EQUAL(false, test_double(".+-1"));
    BOOST_CHECK_EQUAL(false, test_double(".+-10"));
    BOOST_CHECK_EQUAL(false, test_double(".+0"));
    BOOST_CHECK_EQUAL(false, test_double(".+0-"));
    BOOST_CHECK_EQUAL(false, test_double(".+0-1"));
    BOOST_CHECK_EQUAL(false, test_double(".+01"));
    BOOST_CHECK_EQUAL(false, test_double(".+01-"));
    BOOST_CHECK_EQUAL(false, test_double(".+1"));
    BOOST_CHECK_EQUAL(false, test_double(".+1-"));
    BOOST_CHECK_EQUAL(false, test_double(".+1-0"));
    BOOST_CHECK_EQUAL(false, test_double(".+10"));
    BOOST_CHECK_EQUAL(false, test_double(".+10-"));
    BOOST_CHECK_EQUAL(false, test_double(".0"));
    BOOST_CHECK_EQUAL(false, test_double(".0-"));
    BOOST_CHECK_EQUAL(false, test_double(".0-+"));
    BOOST_CHECK_EQUAL(false, test_double(".0-+1"));
    BOOST_CHECK_EQUAL(false, test_double(".0-1"));
    BOOST_CHECK_EQUAL(false, test_double(".0-1+"));
    BOOST_CHECK_EQUAL(false, test_double(".0+"));
    BOOST_CHECK_EQUAL(false, test_double(".0+-"));
    BOOST_CHECK_EQUAL(false, test_double(".0+-1"));
    BOOST_CHECK_EQUAL(false, test_double(".0+1"));
    BOOST_CHECK_EQUAL(false, test_double(".0+1-"));
    BOOST_CHECK_EQUAL(false, test_double(".01"));
    BOOST_CHECK_EQUAL(false, test_double(".01-"));
    BOOST_CHECK_EQUAL(false, test_double(".01-+"));
    BOOST_CHECK_EQUAL(false, test_double(".01+"));
    BOOST_CHECK_EQUAL(false, test_double(".01+-"));
    BOOST_CHECK_EQUAL(false, test_double(".1"));
    BOOST_CHECK_EQUAL(false, test_double(".1-"));
    BOOST_CHECK_EQUAL(false, test_double(".1-+"));
    BOOST_CHECK_EQUAL(false, test_double(".1-+0"));
    BOOST_CHECK_EQUAL(false, test_double(".1-0"));
    BOOST_CHECK_EQUAL(false, test_double(".1-0+"));
    BOOST_CHECK_EQUAL(false, test_double(".1+"));
    BOOST_CHECK_EQUAL(false, test_double(".1+-"));
    BOOST_CHECK_EQUAL(false, test_double(".1+-0"));
    BOOST_CHECK_EQUAL(false, test_double(".1+0"));
    BOOST_CHECK_EQUAL(false, test_double(".1+0-"));
    BOOST_CHECK_EQUAL(false, test_double(".10"));
    BOOST_CHECK_EQUAL(false, test_double(".10-"));
    BOOST_CHECK_EQUAL(false, test_double(".10-+"));
    BOOST_CHECK_EQUAL(false, test_double(".10+"));
    BOOST_CHECK_EQUAL(false, test_double(".10+-"));
    BOOST_CHECK_EQUAL(true, test_double("-987654321.123456789876543212345678987654321"));
}